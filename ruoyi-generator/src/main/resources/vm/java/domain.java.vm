package ${packageName}.domain;

import java.util.Date;
import java.util.List;
import java.util.ArrayList;
import com.ruoyi.common.core.domain.BaseEntity;
import com.ruoyi.common.annotation.Excel;

/**
 * ${functionName}对象 ${tableName}
 * 
 * @author ${author}
 * @date ${datetime}
 */
public class ${ClassName} extends BaseEntity
{
    private static final long serialVersionUID = 1L;

#foreach ($column in $columns)
#if(${column.isSuperColumn()})
    /** ${column.columnComment} */
#set($dictType = "")
#foreach ($subColumn in $subColumns)
#if($subColumn.columnName == $column.columnName)
#set($dictType = $subColumn.dictType)
#end
#end
#if($column.htmlType == "select" || $column.htmlType == "radio" || $column.htmlType == "checkbox")
#if($dictType != "" && $dictType)
    @Excel(name = "${column.columnComment}", dictType = "$dictType", readConverterExp = "$column.javaField")
#else
    @Excel(name = "${column.columnComment}")
#end
#else
    @Excel(name = "${column.columnComment}")
#end
    private ${column.javaType} ${column.javaField};
#end

#end

#if($table.sub)
#set($subTableType = $table.subTableType)
#if(!$subTableType || $subTableType == "")
#set($subTableType = 1)
#end
#if($subTableType == 1)
    /** $subTableName表 */
    private ${subClassName} ${subclassName};

    /** $subTableName集合 */
    private List<${subClassName}> ${subclassName}List = new ArrayList<${subClassName}>();
    
#elseif($subTableType == 2)
    /** 多个子表集合 */
#foreach ($subTableInfo in $table.subTables)
    private List<${subTableInfo.subClassName}> ${subTableInfo.subclassName}List = new ArrayList<${subTableInfo.subClassName}>();
#end
    
#end
#end

#foreach ($column in $columns)
#if(!$column.isSuperColumn())
    /** ${column.columnComment} */
#set($dictType = "")
#foreach ($subColumn in $subColumns)
#if($subColumn.columnName == $column.columnName)
#set($dictType = $subColumn.dictType)
#end
#end
#if($column.htmlType == "select" || $column.htmlType == "radio" || $column.htmlType == "checkbox")
#if($dictType != "" && $dictType)
    @Excel(name = "${column.columnComment}", dictType = "$dictType", readConverterExp = "$column.javaField")
#else
    @Excel(name = "${column.columnComment}")
#end
#else
    @Excel(name = "${column.columnComment}")
#end
    private ${column.javaType} ${column.javaField};
#end

#end

#foreach ($column in $columns)
#if(${column.isSuperColumn()})
    public ${column.javaType} get${column.capJavaField}()
    {
        return ${column.javaField};
    }

    public void set${column.capJavaField}(${column.javaType} ${column.javaField})
    {
        this.${column.javaField} = ${column.javaField};
    }
#end

#end

#foreach ($column in $columns)
#if(!$column.isSuperColumn())
    public ${column.javaType} get${column.capJavaField}()
    {
        return ${column.javaField};
    }

    public void set${column.capJavaField}(${column.javaType} ${column.javaField})
    {
        this.${column.javaField} = ${column.javaField};
    }
#end

#end

#if($table.sub)
#set($subTableType = $table.subTableType)
#if(!$subTableType || $subTableType == "")
#set($subTableType = 1)
#end
#if($subTableType == 1)
    public ${subClassName} get${subClassName}()
    {
        return ${subclassName};
    }

    public void set${subClassName}(${subClassName} ${subclassName})
    {
        this.${subclassName} = ${subclassName};
    }

    public List<${subClassName}> get${subClassName}List()
    {
        return ${subclassName}List;
    }

    public void set${subClassName}List(List<${subClassName}> ${subclassName}List)
    {
        this.${subclassName}List = ${subclassName}List;
    }
    
#elseif($subTableType == 2)
#foreach ($subTableInfo in $table.subTables)
    public List<${subTableInfo.subClassName}> get${subTableInfo.subClassName}List()
    {
        return ${subTableInfo.subclassName}List;
    }

    public void set${subTableInfo.subClassName}List(List<${subTableInfo.subClassName}> ${subTableInfo.subclassName}List)
    {
        this.${subTableInfo.subclassName}List = ${subTableInfo.subclassName}List;
    }
#end
    
#end
#end
}